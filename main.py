import telebot
import requests
import os
from telebot import types
import re
import openai
from style_guide import style_guide_men, style_guide_women 
import json
import csv

API_TOKEN = "8119951241:AAFK9e6IHq2B7iU8XDcTm-GU_KHd5LHNMrY"
bot = telebot.TeleBot(API_TOKEN)
API = 'e119fe20fcb94481b90174333230504'  # –∫–ª—é—á –¥–ª—è WeatherAPI

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_states = {}

def greet_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    greet_button = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
    markup.add(greet_button)
    return markup

def main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    menu_button = types.KeyboardButton("üìã –ú–µ–Ω—é")
    profile_button = types.KeyboardButton("üë§ –ü—Ä–æ—Ñ–∏–ª—å")
    weather_button = types.KeyboardButton("üå¶Ô∏è –ü–æ–≥–æ–¥–∞")
    about_button = types.KeyboardButton("‚ÑπÔ∏è –û –±–æ—Ç–µ")
    gid_button = types.KeyboardButton("üó∫Ô∏è –ì–∏–¥ –ø–æ —Å—Ç–∏–ª—é")
    promotion_button = types.KeyboardButton("üéâ –ê–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏")
    donate_button = types.KeyboardButton("üí∞ –°–∫–∏–Ω—É—Ç—å –¥–µ–Ω–µ–∂–∫—É –∞–≤—Ç–æ—Ä–∞–º –Ω–∞ –ø–µ—á–µ–Ω—å–∫–∏")
    support_button = types.KeyboardButton("üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
    markup.add(profile_button, weather_button, gid_button,promotion_button, donate_button,about_button, support_button)
    return markup

@bot.message_handler(commands=['start']) 
def main(message):
    bot.send_message(message.chat.id, f"üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞!\n–Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º —Å –≤—ã–±–æ—Ä–æ–º –æ–¥–µ–∂–¥—ã –ø–æ –ø–æ–≥–æ–¥–µ. üå¶Ô∏è", reply_markup=greet_menu())

@bot.message_handler(func=lambda message: message.text == "üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
def greet_user(message):
    bot.send_message(message.chat.id, "–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:", reply_markup=main_menu())

@bot.message_handler(func=lambda message: message.text == "üå¶Ô∏è –ü–æ–≥–æ–¥–∞")
def ask_city(message):
    user_states[message.chat.id] = 'waiting_for_city'  # —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è
    bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –≥–æ—Ä–æ–¥, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É.")



# –ú–µ–Ω—é
@bot.message_handler(func=lambda message: message.text == "üë§ –ü—Ä–æ—Ñ–∏–ª—å")
def user_info(message):
    user_id = message.from_user.id
    username = message.from_user.username or "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
    first_name = message.from_user.first_name or "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
    last_name = message.from_user.last_name or "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
    language_code = message.from_user.language_code or "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
    is_bot = message.from_user.is_bot

    info_text = (
        "üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:\n"
        f"üîπ ID: {user_id}\n"
        f"üîπ –ò–º—è: {first_name}\n"
        f"üîπ –§–∞–º–∏–ª–∏—è: {last_name}\n"
        f"üîπ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @{username}\n"
        f"üîπ –Ø–∑—ã–∫: {language_code}\n"
    )
    bot.send_message(message.chat.id, info_text)


@bot.message_handler(func=lambda message: message.text == "‚ÑπÔ∏è –û –±–æ—Ç–µ")
def about_bot(message):
    about_text = (
        "ü§ñ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å –≤ –Ω–∞—à–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–º –±–æ—Ç–µ, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –≤—ã–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—É—é –æ–¥–µ–∂–¥—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–æ–≥–æ–¥—ã! üå¶Ô∏è\n\n"
        "üëó –ú—ã –ø–æ–Ω–∏–º–∞–µ–º, –∫–∞–∫ –≤–∞–∂–Ω–æ —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –∏ —Å—Ç–∏–ª—å–Ω–æ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è –≥–æ–¥–∞. –≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤–∞–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–¥–µ–∂–¥–µ, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ —Ç–µ–∫—É—â–∏—Ö –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ.\n\n"
        "üåç –ù–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ç–æ–≥–æ, –∏–¥–µ—Ç –ª–∏ –¥–æ–∂–¥—å, —Å–≤–µ—Ç–∏—Ç —Å–æ–ª–Ω—Ü–µ –∏–ª–∏ –¥—É–µ—Ç —Ö–æ–ª–æ–¥–Ω—ã–π –≤–µ—Ç–µ—Ä, –º—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–π –Ω–∞—Ä—è–¥, —á—Ç–æ–±—ã –≤—ã –≤—Å–µ–≥–¥–∞ –≤—ã–≥–ª—è–¥–µ–ª–∏ –Ω–∞ –≤—Å–µ 100%! üíØ\n\n"
        "üöÄ –≠—Ç–æ—Ç –±–æ—Ç ‚Äî —ç—Ç–æ –±—É–¥—É—â–∏–π —Å—Ç–∞—Ä—Ç–∞–ø –º–æ–ª–æ–¥—ã—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ç—Ä–µ–º—è—Ç—Å—è —Å–¥–µ–ª–∞—Ç—å –≤–∞—à—É –∂–∏–∑–Ω—å –ø—Ä–æ—â–µ –∏ —É–¥–æ–±–Ω–µ–µ. –ú—ã –≤–µ—Ä–∏–º, —á—Ç–æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –º–æ–≥—É—Ç –ø–æ–º–æ—á—å –ª—é–¥—è–º –ø—Ä–∏–Ω–∏–º–∞—Ç—å –±–æ–ª–µ–µ –æ—Å–æ–∑–Ω–∞–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –≤ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –∂–∏–∑–Ω–∏. üí°\n\n"
        "üí¨ –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ –∏–¥–µ–∏, –∫–∞–∫ —É–ª—É—á—à–∏—Ç—å –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –Ω–∞–º! –ú—ã –≤—Å–µ–≥–¥–∞ –æ—Ç–∫—Ä—ã—Ç—ã –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –∏ –≥–æ—Ç–æ–≤—ã —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –≤–º–µ—Å—Ç–µ —Å –≤–∞–º–∏.\n\n"
        "‚ú® –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É –∏ –±—É–¥—å—Ç–µ –≤ –∫—É—Ä—Å–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –º–æ–¥–Ω—ã—Ö —Ç–µ–Ω–¥–µ–Ω—Ü–∏–π –∏ –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π! –í–∞—à —Å—Ç–∏–ª—å ‚Äî –Ω–∞—à–∞ –∑–∞–±–æ—Ç–∞! üåü"
    )
    bot.send_message(message.chat.id, about_text)




@bot.message_handler(func=lambda message: message.text == "üó∫Ô∏è –ì–∏–¥ –ø–æ —Å—Ç–∏–ª—é")
def gid(message):
    about_gid = (
        "ü§ñ: –ü—Ä–∏–≤–µ—Ç! –Ø –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –∏ –≤–∞—à –≥–∏–¥ –ø–æ —Å—Ç–∏–ª—é! üåü\n\n"
        "üí° –Ø –≥–µ–Ω–µ—Ä–∏—Ä—É—é –∏–¥–µ–∏, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –≤–∞—à —Å—Ç–∏–ª—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∏ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–º—Å—è!\n\n"
        "‚ö†Ô∏è –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –¥–æ—Å—Ç—É–ø–Ω—ã –Ω–æ–≤—ã–µ –∏–¥–µ–∏. –î–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –≤–∞—à –∏–¥–µ–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å! üíÉ‚ú®"
    )
    bot.send_message(message.chat.id, about_gid)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("üï¥Ô∏è –ú—É–∂—Å–∫–æ–π"), types.KeyboardButton("üëó –ñ–µ–Ω—Å–∫–∏–π"))
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text in ["üï¥Ô∏è –ú—É–∂—Å–∫–æ–π", "üëó –ñ–µ–Ω—Å–∫–∏–π"])
def choose_style(message):
    user_states[message.chat.id] = "waiting_for_style_question"  # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    style_guide_selected = style_guide_men if message.text == "üï¥Ô∏è –ú—É–∂—Å–∫–æ–π" else style_guide_women
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for question in style_guide_selected.keys():
        markup.add(types.KeyboardButton(question))
    markup.add(types.KeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"))
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:", reply_markup=markup)

@bot.message_handler(func=lambda message: user_states.get(message.chat.id) == "waiting_for_style_question")
def answer_style_quest(message):
    answer = None
    if message.text in style_guide_men:
        answer = style_guide_men[message.text]
    elif message.text in style_guide_women:
        answer = style_guide_women[message.text]
    
    if answer:
        bot.send_message(message.chat.id, answer)
    else:
        # –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –≤—ã–±–æ—Ä—É –≤–æ–ø—Ä–æ—Å–æ–≤
        bot.send_message(message.chat.id, "–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é", reply_markup=main_menu())
        user_states[message.chat.id] = None  # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—Ç–∞

@bot.message_handler(func=lambda message: message.text == "üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")
def back_to_main(message):
    bot.send_message(message.chat.id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=main_menu())
    user_states[message.chat.id] = None  # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é





@bot.message_handler(func=lambda message: message.text == "üéâ –ê–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏")
def promotions(message):
    about_sale = (
        "–ú—ã –≤—Å–µ–≥–¥–∞ —Å—Ç—Ä–µ–º–∏–º—Å—è –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞–º –ª—É—á—à–∏–µ —É—Å–ª–æ–≤–∏—è –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏! –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –º—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –Ω–æ–≤–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª–∏—Ç –≤–∞–º –ø–æ–ª—É—á–∞—Ç—å —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–¥–µ–∂–¥–µ, —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ —Å–∫–∏–¥–∫–∏ –Ω–∞ —Ç–æ–≤–∞—Ä—ã –æ—Ç –Ω–∞—à–∏—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤! üõçÔ∏è‚ú®\n\n"
        "–ü–æ–¥–ø–∏—Å–∫–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è, –∏ –º—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –æ–Ω–∞ —Å–¥–µ–ª–∞–µ—Ç –≤–∞—à –æ–ø—ã—Ç –µ—â–µ –±–æ–ª–µ–µ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º –∏ –≤—ã–≥–æ–¥–Ω—ã–º! \n\n"
        "–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∑–∞–ø—É—Å–∫! üöÄ"
    )
    bot.send_message(message.chat.id, about_sale)



def payment_menu(message):
    keyboard = types.InlineKeyboardMarkup()

    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º
    button_tinkoff = types.InlineKeyboardButton(text="üí≥ –¢–∏–Ω—å–∫–æ—Ñ—Ñ", callback_data="tinkoff")
    button_donation = types.InlineKeyboardButton(text="DonationAlerts üíñ", url="https://www.donationalerts.com/r/ruslan_kulikov")
    
    keyboard.add(button_tinkoff, button_donation)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É:", reply_markup=keyboard)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å —Å—É–º–º–∞–º–∏
def update_amount_menu(call):
    keyboard = types.InlineKeyboardMarkup()

    button_100 = types.InlineKeyboardButton(text="100 RUB", url="https://www.tbank.ru/cf/9uwIZw2IzAI?amount=100")
    button_500 = types.InlineKeyboardButton(text="500 RUB", url="https://www.tbank.ru/cf/9uwIZw2IzAI?amount=500")
    button_1000 = types.InlineKeyboardButton(text="1000 RUB", url="https://www.tbank.ru/cf/9uwIZw2IzAI?amount=1000")
    button_other = types.InlineKeyboardButton(text="–õ—é–±–∞—è –¥—Ä—É–≥–∞—è —Å—É–º–º–∞ üí∏", url="https://www.tbank.ru/cf/9uwIZw2IzAI")
    keyboard.add(button_100, button_500, button_1000, button_other)

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    back_button = types.InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_payment")
    keyboard.add(back_button)

    # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:", chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=keyboard)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ–Ω—é —Å –ø–ª–∞—Ç–µ–∂–Ω—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏
def update_payment_menu(call):
    keyboard = types.InlineKeyboardMarkup()

    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º
    button_tinkoff = types.InlineKeyboardButton(text="üí≥ –¢–∏–Ω—å–∫–æ—Ñ—Ñ", callback_data="tinkoff")
    button_donation = types.InlineKeyboardButton(text="DonationAlerts üíñ", url="https://www.donationalerts.com/r/ruslan_kulikov")
    
    keyboard.add(button_tinkoff, button_donation)

    # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É:", chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=keyboard)

@bot.message_handler(func=lambda message: message.text == "üí∞ –°–∫–∏–Ω—É—Ç—å –¥–µ–Ω–µ–∂–∫—É –∞–≤—Ç–æ—Ä–∞–º –Ω–∞ –ø–µ—á–µ–Ω—å–∫–∏")
def donat(message):
    payment_menu(message)

@bot.callback_query_handler(func=lambda call: True)
def handle_query(call):
    if call.data in ["tinkoff", "sber", "ozon"]:
        update_amount_menu(call)
    elif call.data == "back_to_payment":
        update_payment_menu(call)

@bot.message_handler(func=lambda message: message.text == "üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
def support_textbot(message):
    support_text = (
        "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ –∏–¥–µ–∏ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –ø–∏—Å–∞—Ç—å –Ω–∞–º! –ú—ã –≤—Å–µ–≥–¥–∞ –æ—Ç–∫—Ä—ã—Ç—ã –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –∏ –≥–æ—Ç–æ–≤—ã —É–ª—É—á—à–∞—Ç—å –Ω–∞—à —Å–µ—Ä–≤–∏—Å.\n\n"
        "üì© –ü–∏—à–∏—Ç–µ @mlnkrr, –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –æ—Ç–≤–µ—Ç–∏—Ç—å –≤–∞–º –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!"
    )
    bot.send_message(message.chat.id,support_text)






# –ø–æ–ª—É—á–µ–Ω–∏–µ –ê–ø–∏—à–∫–∏
@bot.message_handler(func=lambda message:user_states.get(message.chat.id)=="waiting_for_city")
def get_weather(message):

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –≥–æ—Ä–æ–¥–∞
        city = message.text.strip().lower()
        print(f"–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–≥–æ–¥—É –¥–ª—è –≥–æ—Ä–æ–¥–∞: {city}")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        try:
            res = requests.get(f'https://api.weatherapi.com/v1/current.json?key={API}&q={city}&aqi=no', timeout=60)
            print(f"–°—Ç–∞—Ç—É—Å –∫–æ–¥ –æ—Ç–≤–µ—Ç–∞: {res.status_code}")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–≤–µ—Ç–∞
            
            if res.status_code == 200:
                data = res.json() 
                print(f"–î–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ: {data}")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
                
                if "current" in data:
                    temperature = data["current"]["temp_c"]
                    humidity = data["current"]["humidity"]
                    wind_speed = data["current"]["wind_kph"]
                    feel_weather = data["current"]["feelslike_c"]
                    weather_description = data["current"]["condition"]["text"] 

                    if 'clear' in weather_description.lower():
                        image_path = 'photo/sun (1).jpg'
                    elif 'sunny' in weather_description.lower():
                        image_path = 'photo/sun (1).jpg'
                    elif 'overcast' in weather_description.lower():
                        image_path = 'photo/cloudy.jpg'
                    elif 'fog' in weather_description.lower():
                        image_path = 'photo/cloudy.jpg'    
                    elif 'mist' in weather_description.lower():
                        image_path = 'photo/cloudy.jpg'
                    elif 'cloud' in weather_description.lower(): 
                        image_path = 'photo/cloudy.jpg'
                    elif 'rain' in weather_description.lower():
                        image_path = 'photo/rain.jpg'
                    elif 'snow' in weather_description.lower():
                        image_path = 'photo/m028t0163_l_black_cloud_with_snow_and_moon_28sep22.jpg'
                    elif 'wind' in weather_description.lower():
                        image_path = 'photo/m028t0163_o_windy_black_cloud_28sep22'
                    else:
                        image_path = None
                    
                    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ, –µ—Å–ª–∏ –æ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                    if image_path and os.path.exists(image_path):
                        with open(image_path, 'rb') as file:
                            bot.send_photo(message.chat.id, file)
                    
                    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                    print(f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature}, –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}, –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed}, –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {feel_weather}, –û–ø–∏—Å–∞–Ω–∏–µ: {weather_description}")
                    
                 
                    text_response = (f'–°–µ–π—á–∞—Å –ø–æ–≥–æ–¥–∞ –≤ {city.title()}üëá:\n'
                                     f'üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature}¬∞C\n'
                                     f'üí® –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed} –∫–º/—á\n'
                                     f'üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n'
                                     f'üíÅ –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {feel_weather}¬∞C\n'
                                     f'‚òÅÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ: {weather_description}')
            
                    bot.send_message(message.chat.id, text_response)
                else:
                    bot.reply_to(message, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.")
            else:
                bot.reply_to(message, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.")
        except requests.exceptions.ReadTimeout:
            bot.reply_to(message, "–ó–∞–ø—Ä–æ—Å –∫ API –ø—Ä–µ–≤—ã—Å–∏–ª –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        except Exception as e:
            bot.reply_to(message, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
            print(f"–û—à–∏–±–∫–∞: {str(e)}")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        user_states[message.chat.id] = "waiting_for_city"

bot.polling(non_stop=True, interval=0)